<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->

<!DOCTYPE mapper PUBLIC '-//org.mybatis//DTD Configuration//EN' 'http://org.mybatis/dtd/mybatis-3-mapper.dtd'>

<mapper namespace="sqlM">
 <!--#{group_id,javaType=int,jdbcType=NUMERIC,typeHandler=MyTypeHandler}-->
    
    <sql id="smplSelect">select * from ${table}</sql>
    
    <select id="findAllUsers" resultMap="uMapper.UserMap">
         select * from users  
    </select>
    
    <select id="findUserById" resultMap="uMapper.UserMap">
        <include refid="smplSelect">
            <property name="table" value="users u"/>
        </include>  
        where u.id=#{id}
    </select>
<!--    <select id="findAllAuthors" resultMap="aMapper.AuthorMap">
        select     a.real_name , a.id_card , 
        u.id , u.user_name , u.password 
        from authors a left join
        users u on a.user_id=u.id
    </select>-->
    
    
     <!--find authors with user--> 
    <select id="findAllAuthors" resultMap="aMapper.AuthorMap">
        <include refid="smplSelect">
            <property name="table" value="authors a"/>
        </include>
         left join
        users u on a.user_id=u.id
    </select>
    
    <!--find authors without user--> 
    <select id="findAllAuthors_A" resultMap="aMapper.AuthorMap">
        <include refid="smplSelect">
            <property name="table" value="authors"/>
        </include>
    </select>
    
    <select id="findAuthorById" resultMap="aMapper.AuthorMap">
        <include refid="smplSelect">
            <property name="table" value="authors"/>
        </include>
        where id=#{id}
    </select>
    
    <!--for nested select-->
    <select id="findVisitorByUserId" resultMap="vMapper.VisitorMap">
        select * from visitors v where v.user_id=#{id};
    </select>
    
    
    <select id="findVisitorById" resultMap="vMapper.VisitorMap">
        select * from visitors v where v.id=#{id};
    </select>
    <select id="findAllVisitors" resultMap="vMapper.VisitorMap">
        select * from visitors  
    </select>
    
    <!--****************INSERT**************-->
    
    
    
    <sql id="insU">insert into users(user_name,password) values</sql>
    <insert id="insertUser" parameterType="User" keyProperty="id" useGeneratedKeys="true">
        <include refid="insU"/>
        (#{userName},#{password})
    </insert>
<!--    <insert id="insertUsers" parameterType="User" keyProperty="id" useGeneratedKeys="true">
        <include refid="insU"/>
       <foreach item="item" collection="list" separator=",">
           (#{item.userName},#{item.password})
            
       </foreach>
    </insert>-->
    
    
    <sql id="insA">insert into authors(real_name,id_card,user_id) values</sql>
    <insert id="insertAuthor"  
            parameterType="Author" keyProperty="id" useGeneratedKeys="true">
        <include refid="insA"/>
        (#{realName},#{idCard},#{user.id})
         
    </insert>
    
<!--    <insert id="insertAuthors"  
        parameterType="Author" keyProperty="id" useGeneratedKeys="true">
        <include refid="insA"/>
        <foreach item="item" separator="," collection="list">
            (#{item.realName},#{item.idCard},#{item.user.id})
        </foreach>
    </insert>   -->
    
      <sql id="insV">insert into visitors(user_id,visitor_ip,visit_date) values </sql>
    <insert  id="insertVisitor" parameterType="Visitor" keyProperty="id" useGeneratedKeys="true">
        insert into visitors(visitor_ip,visit_date,user_id) values
         (#{visitorIp},#{visitDate},#{user.id})
    </insert> 
    
     <!--*****************UPDATE****************--> 
</mapper>
